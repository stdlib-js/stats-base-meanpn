{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/meanpn.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas-ext-base-gsumpw' ).ndarray;\nvar gapxsumpw = require( '@stdlib/blas-ext-base-gapxsumpw' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = toAccessorArray( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = meanpn( 4, arraylike2object( x ), 2, 1 );\n* // returns 1.25\n*/\nfunction meanpn( N, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar get;\n\tvar mu;\n\tvar c;\n\n\txbuf = x.data;\n\tget = x.accessors[ 0 ];\n\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn get( xbuf, offsetX );\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, xbuf, strideX, offsetX ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, xbuf, strideX, offsetX ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas-ext-base-gsumpw' ).ndarray;\nvar gapxsumpw = require( '@stdlib/blas-ext-base-gapxsumpw' ).ndarray;\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496\u201399. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = meanpn( 4, x, 2, 1 );\n* // returns 1.25\n*/\nfunction meanpn( N, x, strideX, offsetX ) {\n\tvar mu;\n\tvar c;\n\tvar o;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, strideX, offsetX );\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn x[ offsetX ];\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, x, strideX, offsetX ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, x, strideX, offsetX ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496\u201399. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = meanpn( 3, x, 1 );\n* // returns ~0.3333\n*/\nfunction meanpn( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar meanpn = require( './meanpn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( meanpn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* @module @stdlib/stats-base-meanpn\n*\n* @example\n* var meanpn = require( '@stdlib/stats-base-meanpn' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = meanpn( 3, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var meanpn = require( '@stdlib/stats-base-meanpn' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = meanpn.ndarray( 4, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar meanpn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n\n// exports: { \"ndarray\": \"meanpn.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,8BAA+B,EAAE,QACnDC,EAAY,QAAS,iCAAkC,EAAE,QAwB7D,SAASC,EAAQC,EAAGC,EAAGC,EAASC,EAAU,CACzC,IAAIC,EACAC,EACAC,EACA,EAKJ,OAHAF,EAAOH,EAAE,KACTI,EAAMJ,EAAE,UAAW,CAAE,EAEhBD,IAAM,GAAKE,IAAY,EACpBG,EAAKD,EAAMD,CAAQ,GAG3BG,EAAKT,EAAQG,EAAGI,EAAMF,EAASC,CAAQ,EAAIH,EAG3C,EAAIF,EAAWE,EAAG,CAACM,EAAIF,EAAMF,EAASC,CAAQ,EAAIH,EAE3CM,EAAK,EACb,CAKAV,EAAO,QAAUG,ICvEjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,8BAA+B,EAAE,QACnDC,EAAY,QAAS,iCAAkC,EAAE,QACzDC,EAAmB,QAAS,qCAAsC,EAClEC,EAAY,IA8BhB,SAASC,EAAQC,EAAGC,EAAGC,EAASC,EAAU,CACzC,IAAIC,EACAC,EACAC,EAEJ,OAAKN,GAAK,EACF,KAERM,EAAIT,EAAkBI,CAAE,EACnBK,EAAE,iBACCR,EAAWE,EAAGM,EAAGJ,EAASC,CAAQ,EAErCH,IAAM,GAAKE,IAAY,EACpBD,EAAGE,CAAQ,GAGnBC,EAAKT,EAAQK,EAAGC,EAAGC,EAASC,CAAQ,EAAIH,EAGxCK,EAAIT,EAAWI,EAAG,CAACI,EAAIH,EAAGC,EAASC,CAAQ,EAAIH,EAExCI,EAAKC,GACb,CAKAX,EAAO,QAAUK,IClFjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IA4Bd,SAASC,EAAQC,EAAGC,EAAGC,EAAU,CAChC,OAAOJ,EAASE,EAAGC,EAAGC,EAASL,EAAeG,EAAGE,CAAQ,CAAE,CAC5D,CAKAN,EAAO,QAAUG,IC1DjB,IAAAI,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAS,IACTC,EAAU,IAKdF,EAAaC,EAAQ,UAAWC,CAAQ,EAKxCH,EAAO,QAAUE,ICUjB,IAAIE,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "gsumpw", "gapxsumpw", "meanpn", "N", "x", "strideX", "offsetX", "xbuf", "get", "mu", "require_ndarray", "__commonJSMin", "exports", "module", "gsumpw", "gapxsumpw", "arraylike2object", "accessors", "meanpn", "N", "x", "strideX", "offsetX", "mu", "c", "o", "require_meanpn", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "meanpn", "N", "x", "strideX", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "meanpn", "ndarray", "meanpn"]
}
